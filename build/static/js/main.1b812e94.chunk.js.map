{"version":3,"sources":["audio/photon-torpedos.mp3","audio/invader-death.mp3","Constants.ts","GameCanvas.tsx","helpers.ts","Geometry.ts","reducer.ts","components/Sound.tsx","components/Table.tsx","components/ControlsTable.tsx","components/StartScreen.tsx","components/HighScores.tsx","components/EndScreen.tsx","App.tsx","Actions.ts","index.tsx"],"names":["module","exports","KEYS","MOVEMENT","UP","DOWN","LEFT","RIGHT","WEAPONS","PHOTON_TORPEDOS","GameCanvas","props","canvas","React","useRef","prevPropsRef","prevTimeRef","useEffect","current","getContext","animationId","render","time","window","requestAnimationFrame","ctx","clearRect","width","height","player","geo","pos","save","translate","x","y","lineWidth","strokeStyle","lineCap","beginPath","moveTo","lineTo","stroke","centerX","centerY","fillStyle","ellipse","Math","PI","fill","gradient","createLinearGradient","addColorStop","restore","shots","forEach","eachShot","invaders","eachInvader","draw","cancelAnimationFrame","className","ref","style","margin","display","isHit","invader","shot","isGameOver","state","map","some","eachInvaderGeo","a","b","initialState","isStarted","score","Constants","cooldown","tick","action","newHp","hp","invaderHit","newInvaders","filter","reduce","acc","curr","reducer","type","maxWidth","maxHeight","newGeo","payload","dx","dy","move","fire","concat","addInvader","Sound","forwardRef","audioPtRef","useImperativeHandle","play","currentTime","src","audio","Table","colSpan","title","rows","eachRow","key","textAlign","left","right","ControlsTable","keys","eachKey","description","StartScreen","handleStart","marginTop","onClick","HighScores","scores","eachScore","i","username","EndScreen","playerScore","handleNewGame","audioMap","photonTorpedos","require","invaderDeath","KEY_LIST","Object","values","isKeyDown","App","useState","setScores","useReducer","dispatch","audioRefs","length","axios","get","then","res","data","catch","e","console","log","handleKeyup","indexOf","handleKeydown","addEventListener","removeEventListener","update","random","min","max","getRandomInvader","tickId","setInterval","ReactDOM","unstable_batchedUpdates","clearInterval","name","handleSave","StrictMode","document","getElementById"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,0FCY9BC,EAAO,CAChBC,SAAU,CACNC,GAAI,IACJC,KAAM,IACNC,KAAM,IACNC,MAAO,KAEXC,QAAS,CACLC,gBAAiB,MCoGVC,EAlHqB,SAACC,GACjC,IAAMC,EAASC,IAAMC,SACfC,EAAeF,IAAMC,SACrBE,EAAcH,IAAMC,SAiG1B,OA/FAG,qBAAU,WACNF,EAAaG,QAAUP,KAG3BM,qBAAU,WACN,IAAMC,EAAUN,EAAOM,QAEvB,GAAKA,EAAQC,WAAb,CAEA,IAqEIC,EAYJ,OAXe,SAATC,EAAUC,GAIZF,EAAcG,OAAOC,sBAAsBH,GA1ElC,WACT,IAAII,EAAgCP,EAAQC,WAAW,MAEvDM,EAAIC,UAAU,EAAG,EAAGR,EAAQS,MAAOT,EAAQU,QAH5B,MAMgBb,EAAaG,QAAQW,OAAOC,IAAnDC,EANO,EAMPA,IAAKJ,EANE,EAMFA,MAAOC,EANL,EAMKA,OACpBH,EAAIO,OACJP,EAAIQ,UAAUF,EAAIG,EAAGH,EAAII,GACzBV,EAAIW,UAAY,EAChBX,EAAIY,YAAc,OAClBZ,EAAIa,QAAU,QACdb,EAAIc,YACJd,EAAIe,OAAO,EAAG,GACdf,EAAIgB,OAAO,EAAGb,GACdH,EAAIe,OAAOb,EAAO,GAClBF,EAAIgB,OAAOd,EAAOC,GAClBH,EAAIiB,SAEJ,IAAIC,EAAUhB,EAAQ,EAClBiB,EAAUhB,EAAS,EAEvBH,EAAIoB,UAAY,OAChBpB,EAAIc,YACJd,EAAIqB,QAAQH,EAASC,EAASjB,EAAQ,EAAGC,EAAS,EAAG,EAAG,EAAG,EAAEmB,KAAKC,IAClEvB,EAAIY,YAAc,QAClBZ,EAAIW,UAAY,EAChBX,EAAIwB,OACJxB,EAAIiB,SAEJ,IAAMQ,EAAWzB,EAAI0B,qBAAqBR,EAASC,EAAUhB,EAAS,EAAGe,EAASC,EAAUhB,EAAS,GACrGsB,EAASE,aAAa,EAAG,SACzBF,EAASE,aAAa,EAAG,QACzB3B,EAAIoB,UAAYK,EAChBzB,EAAIc,YACJd,EAAIqB,QAAQH,EAASC,EAASjB,EAAQ,IAAKC,EAAS,EAAG,EAAG,EAAG,EAAEmB,KAAKC,IACpEvB,EAAIwB,OACJxB,EAAI4B,UAGJtC,EAAaG,QAAQoC,MAAMC,SAAQ,SAAAC,GAAa,IAAD,EAC1BA,EAAS1B,IAAIC,IAAtBG,EADmC,EACnCA,EAAGC,EADgC,EAChCA,EADgC,EAEjBqB,EAAS1B,IAA3BH,EAFmC,EAEnCA,MAAOC,EAF4B,EAE5BA,OACfH,EAAIO,OACJP,EAAIQ,UAAUC,EAAGC,GACjBV,EAAIW,UAAY,EAChBX,EAAIY,YAAc,SAClBZ,EAAIoB,UAAY,SAChBpB,EAAIc,YACJd,EAAIqB,QAAQnB,EAAM,EAAGC,EAAO,EAAGD,EAAM,EAAGC,EAAO,EAAG,EAAG,EAAG,EAAEmB,KAAKC,IAC/DvB,EAAIwB,OACJxB,EAAIiB,SACJjB,EAAI4B,aAIRtC,EAAaG,QAAQuC,SAASF,SAAQ,SAAAG,GAAgB,IAAD,EAChCA,EAAY5B,IAAIC,IAAzBG,EADyC,EACzCA,EAAGC,EADsC,EACtCA,EADsC,EAEvBuB,EAAY5B,IAA9BH,EAFyC,EAEzCA,MAAOC,EAFkC,EAElCA,OACfH,EAAIO,OACJP,EAAIQ,UAAUC,EAAGC,GACjBV,EAAIoB,UAAY,OAChBpB,EAAIc,YACJd,EAAIqB,QAAQnB,EAAM,EAAGC,EAAO,EAAGD,EAAM,EAAGC,EAAO,EAAG,EAAG,EAAG,EAAEmB,KAAKC,IAC/DvB,EAAIwB,OACJxB,EAAI4B,aAURM,GACA3C,EAAYE,QAAUI,EAG1BD,CAAO,GAEA,WACHE,OAAOqC,qBAAqBxC,OAEjC,IAGC,yBAAKyC,UAAU,mBACX,4BACIC,IAAKlD,EACLmD,MAAO,CAACC,OAAQ,SAAUC,QAAS,SACnCtC,MD7GK,KC8GLC,OD/GM,KC2GV,oC,eCnGCsC,EAAQ,SAACC,EAAkBC,GACtC,OAAOA,EAAKtC,IAAIC,IAAIG,EAAIiC,EAAQrC,IAAIC,IAAIG,GAAKiC,EAAQrC,IAAIH,OACvDyC,EAAKtC,IAAIC,IAAIG,EAAIiC,EAAQrC,IAAIC,IAAIG,IFFX,IEGtBkC,EAAKtC,IAAIC,IAAII,EAAIgC,EAAQrC,IAAIC,IAAII,GAAKgC,EAAQrC,IAAIF,QAClDwC,EAAKtC,IAAIC,IAAII,EAAIgC,EAAQrC,IAAIC,IAAII,KFNd,GEMyCgC,EAAQrC,IAAIF,OFLlD,MEQbyC,EAAa,SAACC,GACzB,OAAOA,EAAMb,SACVc,KAAI,SAAAb,GAAW,OAAIA,EAAY5B,OAC/B0C,MAAK,SAAAC,GAAc,OCAMC,EDAYJ,EAAMzC,OAAOC,KCAZ6C,EDAiBF,GCCjD1C,IAAIG,EAAIwC,EAAE3C,IAAIG,GAAKwC,EAAE/C,OAC5BgD,EAAE5C,IAAIG,EAAIwC,EAAE3C,IAAIG,IAAMyC,EAAEhD,OACxBgD,EAAE5C,IAAII,EAAIuC,EAAE3C,IAAII,GAAKuC,EAAE9C,QACvB+C,EAAE5C,IAAII,EAAIuC,EAAE3C,IAAII,IAAMwC,EAAE/C,OAJC,IAAC8C,EAAaC,MCd9BC,EAAsB,CACjCC,WAAW,EACXC,MAAO,EACPjD,OAAQ,CACNC,IAAK,CACHH,MAAO,GACPC,OAAQ,GACRG,IAAK,CACHG,EAAG6C,MACH5C,EAAG4C,MAGPC,SAAU,GAEZ1B,MAAO,GACPG,SAAU,IAsDNwB,EAAO,SAACX,EAAcY,GAC1B,IAGMC,EAAQ,SAAChB,GAAD,OACZA,EAAQiB,GAAK,GAJI,SAACjB,GAAD,OAAsBG,EAAMhB,MAAMkB,MAAK,SAAAhB,GAAQ,OAAIU,EAAMC,EAASX,MAIjE6B,CAAWlB,GACzBA,EAAQiB,GAAK,EACbjB,EAAQiB,IAERE,EAAchB,EAAMb,SACvB8B,QAAO,SAAA7B,GAAW,OAAIA,EAAY5B,IAAIC,IAAII,EAAIuB,EAAY5B,IAAIF,OJnF7C,OIoFjB2D,QAAO,SAAA7B,GAAW,OAAIA,EAAY0B,GAAK,KACvCb,KAAI,SAAAb,GAAW,sBACXA,EADW,CAEd5B,IAAI,eACC4B,EAAY5B,IADd,CAEDC,IAAI,eACC2B,EAAY5B,IAAIC,IADlB,CAEDI,EAAGgD,EAAMzB,GAAe,EAAIA,EAAY5B,IAAIC,IAAII,EJpFhC,IIoF2DuB,EAAY5B,IAAIC,IAAII,MAGnGiD,GAAID,EAAMzB,QAGd,OAAO,eACFY,EADL,CAEEzC,OAAO,eACFyC,EAAMzC,OADL,CAEJmD,SAAUV,EAAMzC,OAAOmD,SAAW,IAEpCF,MAAOR,EAAMQ,MAAQQ,EAAYE,QAAO,SAACC,EAAKC,GAAN,OAAeD,GAAmB,IAAZC,EAAKN,GAAWM,EAAKZ,MAAQ,KAAI,GAC/FxB,MAAOgB,EAAMhB,MACViC,QAAO,SAAA/B,GAAQ,OAAIA,EAAS1B,IAAIC,IAAII,EAAI,KACxCoD,QAAO,SAAA/B,GAAQ,OA/BHY,EA+BgBZ,GA/BDc,EAAMb,SAASe,MAAK,SAAAd,GAAW,OAAIQ,EAAMR,EAAaU,MAAtE,IAACA,KAgCZG,KAAI,SAAAf,GAAQ,sBACRA,EADQ,CAEX1B,IAAI,eACC0B,EAAS1B,IADX,CAEDC,IAAI,eACCyB,EAAS1B,IAAIC,IADf,CAEDI,EAAGqB,EAAS1B,IAAIC,IAAII,EJ3GT,YI+GnBsB,SAAU6B,KAWDK,EAAU,SAACrB,EAAcY,GACpC,GAAoB,UAAhBA,EAAOU,KACT,OAAO,eAAItB,EAAX,CAAkBO,WAAW,IAG/B,GAAoB,aAAhBK,EAAOU,KACT,OAAO,eAAIhB,EAAX,CAAyBC,WAAW,IAGtC,IAAwB,IAApBP,EAAMO,UACR,OAAOP,EAGT,GAAID,EAAWC,GACb,OAAOA,EAGT,OAAQY,EAAOU,MACb,IAAK,OACH,OA7HO,SAACtB,EAAcY,GAC1B,IDE6BpD,EAAe+D,EAAkBC,ECFxDjE,EAASyC,EAAMzC,OACfkE,EAAM,eACPlE,EAAOC,IADA,CAEVC,IAAI,eACCF,EAAOC,IAAIC,IADb,CAEDG,EAAGoC,EAAMzC,OAAOC,IAAIC,IAAIG,EAAIgD,EAAOc,QAAQC,GAC3C9D,EAAGmC,EAAMzC,OAAOC,IAAIC,IAAII,EAAI+C,EAAOc,QAAQE,OAI/C,ODR4CL,EHxBzB,KGwB2CC,EHzB1C,KGyBShE,ECQViE,GDPRhE,IAAII,EAAIL,EAAIF,OAASkE,GAC9BhE,EAAIC,IAAII,EAAI,GACZL,EAAIC,IAAIG,EAAIJ,EAAIH,MAAQkE,GACxB/D,EAAIC,IAAIG,EAAI,ECKL,eACFoC,EADL,CAEEzC,OAAO,eACFyC,EAAMzC,OADL,CAEJC,IAAKiE,MAKJzB,EAwGI6B,CAAK7B,EAAOY,GACrB,IAAK,OACH,OAvGO,SAACZ,EAAcY,GAC1B,OAAO,eACFZ,EADL,CAEEzC,OAAO,eACFyC,EAAMzC,OADL,CAEJmD,SAAUV,EAAMzC,OAAOmD,SAAW,EJhDX,OIkDjBV,EAAMzC,OAAOmD,WAErB1B,MAAOgB,EAAMzC,OAAOmD,SAAW,EAAxB,sBAEAV,EAAMhB,OAFN,CAGH,CACExB,IAAK,CACHC,IAAK,CACHG,EAAGoC,EAAMzC,OAAOC,IAAIC,IAAIG,EAAIoC,EAAMzC,OAAOC,IAAIH,MAAQ,EAAIoD,EACzD5C,EAAGmC,EAAMzC,OAAOC,IAAIC,IAAII,GAE1BR,MJxDc,GIyDdC,OJxDe,OI4DnB0C,EAAMhB,QAgFD8C,CAAK9B,GACd,IAAK,OACH,OAAOW,EAAKX,GACd,IAAK,cACH,OAhCa,SAACA,EAAcY,GAChC,OAAO,eACFZ,EADL,CAEEb,SAAUa,EAAMb,SAAS4C,OAAOnB,EAAOc,WA6B9BM,CAAWhC,EAAOY,GAC3B,QACE,OAAON,IClJA2B,EAAQ1F,IAAM2F,YAAiC,SAAC7F,EAAOmD,GAClE,IAAM2C,EAAa5F,IAAMC,SAYzB,OAVA4F,8BAAoB5C,GAAK,WACvB,MAAO,CACL6C,KAAM,WACJF,EAAWvF,QAAQ0F,YAAc,EACjCH,EAAWvF,QAAQyF,YAOvB,2BAAO7C,IAAK2C,EAAYI,IAAKlG,EAAMmG,WCX1BC,EAAyB,SAACpG,GACrC,OACE,2BAAOoD,MAAO,CAAEpC,MAAO,SACrB,+BACE,4BACE,wBAAIqF,QAAS,GAAIrG,EAAMsG,SAG3B,+BACGtG,EAAMuG,KAAK3C,KAAI,SAAA4C,GAAO,OACrB,wBAAIC,IAAKD,EAAQC,KACf,wBAAIrD,MAAO,CAAEsD,UAAW,SAAWF,EAAQG,MAC3C,wBAAIvD,MAAO,CAAEsD,UAAW,UAAYF,EAAQI,cCb3CC,EAAiC,SAAC7G,GAC7C,OACE,kBAAC,EAAD,CACEsG,MAAM,WACNC,KAAMvG,EAAM8G,KAAKlD,KAAI,SAAAmD,GAAO,MAAK,CAC/BN,IAAKM,EAAQN,IACbE,KAAM,0BAAMzD,UAAU,gBAAgB6D,EAAQN,KAC9CG,MAAOG,EAAQC,mBChBVC,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC5B,OACE,yBAAKhE,UAAU,uBACb,6BAASA,UAAU,qBACjB,kBAAC,EAAD,CAAe4D,KAAM,CACnB,CACEL,IAAK,IACLO,YAAa,WAEf,CACEP,IAAK,IACLO,YAAa,aAEf,CACEP,IAAK,IACLO,YAAa,aAEf,CACEP,IAAK,IACLO,YAAa,cAEf,CACEP,IAAK,WACLO,YAAa,2BAGjB,4BAAQ5D,MAAO,CAAC+D,UAAW,OAAQC,QAASF,GAA5C,YCjBKG,EAA8B,SAACrH,GAC1C,OACE,oCACE,2CACA,yBAAKkD,UAAU,yBACb,kBAAC,EAAD,CACEqD,KAAMvG,EAAMsH,OAAO1D,KAAI,SAAC2D,EAAWC,GAAZ,MAAmB,CACtCf,IAAKc,EAAUE,SACfd,KAAK,GAAD,OAAKa,EAAI,EAAT,aAAeD,EAAUE,UAC7Bb,MAAO,0BAAM1D,UAAU,SAASqE,EAAUpD,gBCZ3CuD,EAA6B,SAAC1H,GACzC,OACE,yBAAKkD,UAAU,qBACb,6BAASA,UAAU,mBACjB,yCACA,2CAAiBlD,EAAM2H,aACvB,6BAASzE,UAAU,WACjB,4BAAQkE,QAASpH,EAAM4H,eAAvB,YACA,yCAEF,kBAAC,EAAD,CAAYN,OAAQtH,EAAMsH,Y,iBCN5BO,EAAgC,CACpCC,eAAgBC,EAAQ,IACxBC,aAAcD,EAAQ,KAqBlBE,EAAWC,OAAOC,OAAO/D,GAAgBS,QAAO,SAACC,EAAKC,GAAN,OACpDmD,OAAOC,OAAOrD,GAAKY,OAAOwC,OAAOC,OAAOpD,MACxC,IAGIqD,EAAY,GAmGHC,EAjGH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACThB,EADS,KACDiB,EADC,OAEUC,qBAAWxD,EAASf,GAF9B,mBAETN,EAFS,KAEF8E,EAFE,KAGVC,EAA8D,CAClEV,aAAc9H,IAAMC,SACpB2H,eAAgB5H,IAAMC,UA2ExB,OAxEAG,qBAAU,WACJoD,EAAWC,IACS,IAAlB2D,EAAOqB,QACTC,IAAMC,IAAN,cACGC,MAAK,SAAAC,GACJR,EAAUQ,EAAIC,SAEfC,OAAM,SAACC,GACNC,QAAQC,IAAI,6BAMtB9I,qBAAU,WACR,IAAM+I,EAAc,SAACH,IACc,IAA7BjB,EAASqB,QAAQJ,EAAEzC,OACrB2B,EAAUc,EAAEzC,MAAO,IAIjB8C,EAAgB,SAACL,IACY,IAA7BjB,EAASqB,QAAQJ,EAAEzC,OACrB2B,EAAUc,EAAEzC,MAAO,IAOvB,OAHA7F,OAAO4I,iBAAiB,UAAWD,GACnC3I,OAAO4I,iBAAiB,QAASH,GAE1B,WACLzI,OAAO6I,oBAAoB,UAAWF,GACtC3I,OAAO6I,oBAAoB,QAASJ,MAErC,IAEH/I,qBAAU,WACR,IAAMoJ,EAAS,WACbjB,EC/BG,CACLxD,KAAM,OACNI,QAAS,KD+BH+C,EAAUhE,EAAe5E,SAASC,KAAKgJ,EChFxC,CACLxD,KAAM,OACNI,QAAS,CACPC,GAAI,EACJC,IZTY,KWsFR6C,EAAUhE,EAAe5E,SAASE,OAAO+I,ECvE1C,CACLxD,KAAM,OACNI,QAAS,CACPC,GAAI,EACJC,GZnBY,KWuFR6C,EAAUhE,EAAe5E,SAASG,OAAO8I,EC9D1C,CACLxD,KAAM,OACNI,QAAS,CACPC,IZ7BY,EY8BZC,GAAI,KD2DA6C,EAAUhE,EAAe5E,SAASI,QAAQ6I,ECrD3C,CACLxD,KAAM,OACNI,QAAS,CACPC,GZvCY,EYwCZC,GAAI,KDkDA6C,EAAUhE,EAAevE,QAAQC,kBAAkB2I,EC5CpD,CACLxD,KAAM,OACNI,QAAS,KD4CHjD,KAAKuH,SAAW,KAClBlB,ECjCC,CACLxD,KAAM,cACNI,QDjDqB,WACvB,ITfwBuE,EAAaC,ESkBrC,MAAO,CACL1I,IAAK,CACHC,IAAK,CACHG,GTrBkBqI,ESqBL,GTrBkBC,ESqBHzF,KTpB3BhC,KAAKuH,UAAYE,EAAMD,GAAOA,GSqB/BpI,EAAG,GAELR,MATU,GAUVC,OATW,IAWbwD,GAAI,EACJN,MAAO,GAkEyB2F,MAI1BC,EAASC,aAAY,kBAAMC,IAASC,wBAAwBR,KXnG/C,IWoGnB,OAAO,kBAAMS,cAAcJ,MAC1B,IAEHzJ,qBAAU,WACJqD,EAAMzC,OAAOmD,WXvGQ,QWwGvBqE,EAAUZ,eAAevH,QAAQyF,OAGnCrC,EAAMb,SAASF,SAAQ,SAAAG,GACjBA,EAAY0B,IAAM,GACpBiE,EAAUV,aAAazH,QAAQyF,UAI/BtC,EAAWC,IACb+E,EAAUV,aAAazH,QAAQyF,UAMjC,6BACGkC,OAAOpB,KAAKe,GAAUjE,KAAI,SAAAwG,GAAI,OAAI,kBAACxE,EAAD,CAAOa,IAAK2D,EAAMjH,IAAKuF,EAAU0B,GAAOjE,MAAO0B,EAASuC,SACtE,IAApBzG,EAAMO,UACH,kBAAC,EAAD,CAAagD,YAAa,kBAAMuB,EC3HjC,CACLxD,KAAM,QACNI,QAAS,QD0HH3B,EAAWC,GACX,kBAAC,EAAD,CACEiE,cAAe,kBAAMa,EC1DxB,CACLxD,KAAM,WACNI,QAAS,MDyDDgF,WAAY,kBAAM,GAClB1C,YAAahE,EAAMQ,MACnBmD,OAAQA,IAEV,kBAAC,EAAe3D,KElI1BsG,IAASvJ,OACP,kBAAC,IAAM4J,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1b812e94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photon-torpedos.9a96bd66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/invader-death.b68af747.mp3\";","export const SHOTS_PER_SEC = 3;\r\nexport const HEIGHT = 600;\r\nexport const WIDTH = 1024;\r\nexport const TICK_MS = 15;\r\nexport const SHOT_COOLDOWN = 1000 / (TICK_MS * SHOTS_PER_SEC);\r\nexport const DX = 400 * TICK_MS / 1000;\r\nexport const DY = 400 * TICK_MS / 1000;\r\nexport const SHOT_DY = 1000 * TICK_MS / 1000;\r\nexport const INVADER_DY = 100 * TICK_MS / 1000;\r\nexport const SHOT_WIDTH = 10;\r\nexport const SHOT_HEIGHT = 10;\r\n\r\nexport const KEYS = {\r\n    MOVEMENT: {\r\n        UP: 'w',\r\n        DOWN: 's',\r\n        LEFT: 'a',\r\n        RIGHT: 'd'\r\n    },\r\n    WEAPONS: {\r\n        PHOTON_TORPEDOS: ' '\r\n    }\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport { State } from \"./types\";\r\nimport * as Constants from \"./Constants\";\r\n\r\ntype Props = State\r\n\r\nconst GameCanvas: React.FC<Props> = (props) => {\r\n    const canvas = React.useRef<HTMLCanvasElement>()\r\n    const prevPropsRef = React.useRef<Props>();\r\n    const prevTimeRef = React.useRef<number>();\r\n    \r\n    useEffect(() => {\r\n        prevPropsRef.current = props;\r\n    })\r\n\r\n    useEffect(() => {\r\n        const current = canvas.current;\r\n\r\n        if (!current.getContext) return;\r\n\r\n        const draw = () => {\r\n            let ctx: CanvasRenderingContext2D = current.getContext('2d')\r\n\r\n            ctx.clearRect(0, 0, current.width, current.height)\r\n            \r\n            // Draw player\r\n            const { pos, width, height } = prevPropsRef.current.player.geo;\r\n            ctx.save();\r\n            ctx.translate(pos.x, pos.y)\r\n            ctx.lineWidth = 6\r\n            ctx.strokeStyle = 'gray'\r\n            ctx.lineCap = 'round'\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, 0);\r\n            ctx.lineTo(0, height);\r\n            ctx.moveTo(width, 0);\r\n            ctx.lineTo(width, height);\r\n            ctx.stroke();\r\n\r\n            let centerX = width / 2;\r\n            let centerY = height / 2;\r\n\r\n            ctx.fillStyle = 'gray'\r\n            ctx.beginPath();\r\n            ctx.ellipse(centerX, centerY, width / 2, height / 2, 0, 0, 2*Math.PI)\r\n            ctx.strokeStyle = 'black';\r\n            ctx.lineWidth = 1;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n\r\n            const gradient = ctx.createLinearGradient(centerX, centerY - height / 2, centerX, centerY + height / 2)\r\n            gradient.addColorStop(0, 'white');\r\n            gradient.addColorStop(1, 'gray');\r\n            ctx.fillStyle = gradient;\r\n            ctx.beginPath();\r\n            ctx.ellipse(centerX, centerY, width / 4.8, height / 4, 0, 0, 2*Math.PI)\r\n            ctx.fill();\r\n            ctx.restore();\r\n\r\n            // Draw shots\r\n            prevPropsRef.current.shots.forEach(eachShot => {\r\n                const { x, y } = eachShot.geo.pos;\r\n                const { width, height } = eachShot.geo;\r\n                ctx.save();\r\n                ctx.translate(x, y);\r\n                ctx.lineWidth = 3;\r\n                ctx.strokeStyle = 'purple';\r\n                ctx.fillStyle = 'violet';\r\n                ctx.beginPath();\r\n                ctx.ellipse(width/2, height/2, width/2, height/2, 0, 0, 2*Math.PI);\r\n                ctx.fill();\r\n                ctx.stroke();\r\n                ctx.restore();\r\n            })\r\n\r\n            // Draw invaders\r\n            prevPropsRef.current.invaders.forEach(eachInvader => {\r\n                const { x, y } = eachInvader.geo.pos;\r\n                const { width, height } = eachInvader.geo;\r\n                ctx.save();\r\n                ctx.translate(x, y);\r\n                ctx.fillStyle = 'gray';\r\n                ctx.beginPath();\r\n                ctx.ellipse(width/2, height/2, width/2, height/2, 0, 0, 2*Math.PI);\r\n                ctx.fill();\r\n                ctx.restore();\r\n            })\r\n        }\r\n\r\n        let animationId: number;\r\n        const render = (time) => {\r\n            // const dt = time - prevTimeRef.current;\r\n            // console.log(dt);\r\n        \r\n            animationId = window.requestAnimationFrame(render);\r\n            draw();\r\n            prevTimeRef.current = time;\r\n        }\r\n\r\n        render(0);\r\n\r\n        return () => {\r\n            window.cancelAnimationFrame(animationId);\r\n        };\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"graph-container\">\r\n            <canvas \r\n                ref={canvas}  \r\n                style={{margin: '0 auto', display: 'block'}} \r\n                width={Constants.WIDTH} \r\n                height={Constants.HEIGHT}\r\n            >\r\n                This browser is not supported.\r\n            </canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameCanvas","import * as Constants from \"./Constants\";\r\nimport { isOverlapping } from \"./Geometry\";\r\nimport { Invader, Shot, State } from \"./types\";\r\n\r\nexport const getRandom = (min: number, max: number): number => {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\n// takes into account possible \"misses\" due to discrete shot and invader movements\r\nexport const isHit = (invader: Invader, shot: Shot): boolean => {\r\n  return shot.geo.pos.x - invader.geo.pos.x <= invader.geo.width &&\r\n    shot.geo.pos.x - invader.geo.pos.x >= -Constants.SHOT_WIDTH &&\r\n    shot.geo.pos.y - invader.geo.pos.y <= invader.geo.height &&\r\n    shot.geo.pos.y - invader.geo.pos.y >= -(Constants.SHOT_DY - invader.geo.height + Constants.INVADER_DY)\r\n}\r\n\r\nexport const isGameOver = (state: State): boolean => {\r\n  return state.invaders\r\n    .map(eachInvader => eachInvader.geo)\r\n    .some(eachInvaderGeo => isOverlapping(state.player.geo, eachInvaderGeo))\r\n}\r\n","export interface Position {\n  x: number,\n  y: number\n}\n\nexport const dx = (p1: Position, p2: Position): number => {\n  return  p2.x - p1.x;\n}\n\nexport const dy = (p1: Position, p2: Position): number => {\n  return  p2.y - p1.y;\n}\n\nexport interface Geometry {\n  pos: Position,\n  width: number;\n  height: number;\n}\n\nexport const isOverlapping = (a: Geometry, b: Geometry): boolean => {\n  return b.pos.x - a.pos.x <= a.width &&\n    b.pos.x - a.pos.x >= -b.width &&\n    b.pos.y - a.pos.y <= a.height &&\n    b.pos.y - a.pos.y >= -b.height\n}\n\nexport const isWithinBounds = (geo: Geometry, maxWidth: number, maxHeight: number): boolean => {\n  return geo.pos.y + geo.height < maxHeight &&\n    geo.pos.y > 0 &&\n    geo.pos.x + geo.width < maxWidth &&\n    geo.pos.x > 0;\n}\n","import { Action, Invader, MovePayload, State, Shot } from \"./types\"\r\nimport * as Constants from './Constants'\r\nimport { isGameOver, isHit } from \"./helpers\";\r\nimport { isWithinBounds } from \"./Geometry\";\r\n\r\nexport const initialState: State = {\r\n  isStarted: false,\r\n  score: 0,\r\n  player: {\r\n    geo: {\r\n      width: 75,\r\n      height: 75,\r\n      pos: {\r\n        x: Constants.WIDTH * 0.4,\r\n        y: Constants.HEIGHT * 0.8\r\n      },\r\n    },\r\n    cooldown: 0\r\n  },\r\n  shots: [],\r\n  invaders: []\r\n};\r\n\r\nconst move = (state: State, action: Action<MovePayload>): State => {\r\n  const player = state.player;\r\n  const newGeo = {\r\n    ...player.geo,\r\n    pos: {\r\n      ...player.geo.pos,\r\n      x: state.player.geo.pos.x + action.payload.dx,\r\n      y: state.player.geo.pos.y + action.payload.dy\r\n    }\r\n  }\r\n\r\n  if (isWithinBounds(newGeo, Constants.WIDTH, Constants.HEIGHT)) {\r\n    return {\r\n      ...state,\r\n      player: {\r\n        ...state.player,\r\n        geo: newGeo\r\n      }\r\n    }\r\n  }\r\n\r\n  return state  \r\n}\r\n\r\nconst fire = (state: State, action: Action<any>): State => {\r\n  return {\r\n    ...state,\r\n    player: {\r\n      ...state.player,\r\n      cooldown: state.player.cooldown < 0 \r\n          ? Constants.SHOT_COOLDOWN \r\n          : state.player.cooldown\r\n    },\r\n    shots: state.player.cooldown < 0\r\n      ? [\r\n        ...state.shots,\r\n        {\r\n          geo: {\r\n            pos: {\r\n              x: state.player.geo.pos.x + state.player.geo.width / 2 - Constants.SHOT_WIDTH / 2,\r\n              y: state.player.geo.pos.y\r\n            },\r\n            width: Constants.SHOT_WIDTH,\r\n            height: Constants.SHOT_HEIGHT\r\n          }\r\n        }\r\n      ]\r\n      : state.shots\r\n  }\r\n}\r\n\r\nconst tick = (state: State, action: Action<any>): State => {\r\n  const invaderHit = (invader: Invader) => state.shots.some(eachShot => isHit(invader, eachShot));\r\n  const shotHit = (shot: Shot) => state.invaders.some(eachInvader => isHit(eachInvader, shot));\r\n\r\n  const newHp = (invader: Invader) => \r\n    invader.hp > 0 && invaderHit(invader)\r\n      ? invader.hp - 1 \r\n      : invader.hp\r\n\r\n  const newInvaders = state.invaders\r\n    .filter(eachInvader => eachInvader.geo.pos.y + eachInvader.geo.height < Constants.HEIGHT)\r\n    .filter(eachInvader => eachInvader.hp > 0)\r\n    .map(eachInvader => ({\r\n      ...eachInvader,\r\n      geo: {\r\n        ...eachInvader.geo,\r\n        pos: {\r\n          ...eachInvader.geo.pos,\r\n          y: newHp(eachInvader) > 0 ? eachInvader.geo.pos.y + Constants.INVADER_DY : eachInvader.geo.pos.y\r\n        }\r\n      },\r\n      hp: newHp(eachInvader)\r\n  }))\r\n\r\n  return {\r\n    ...state,\r\n    player: {\r\n      ...state.player,\r\n      cooldown: state.player.cooldown - 1,\r\n    },\r\n    score: state.score + newInvaders.reduce((acc, curr) => acc + (curr.hp === 0 ? curr.score : 0), 0),\r\n    shots: state.shots\r\n      .filter(eachShot => eachShot.geo.pos.y > 0)\r\n      .filter(eachShot => !shotHit(eachShot))\r\n      .map(eachShot => ({\r\n        ...eachShot, \r\n        geo: {\r\n          ...eachShot.geo, \r\n          pos: {\r\n            ...eachShot.geo.pos,\r\n            y: eachShot.geo.pos.y - Constants.SHOT_DY\r\n          }\r\n        }\r\n      })),\r\n    invaders: newInvaders\r\n  }\r\n}\r\n\r\nconst addInvader = (state: State, action: Action<Invader>): State => {  \r\n  return {\r\n    ...state,\r\n    invaders: state.invaders.concat(action.payload)\r\n  }\r\n}\r\n\r\nexport const reducer = (state: State, action: Action<any>): State => {\r\n  if (action.type === 'START') {\r\n    return {...state, isStarted: true}\r\n  }\r\n\r\n  if (action.type === 'NEW_GAME') {\r\n    return {...initialState, isStarted: true}\r\n  }\r\n  \r\n  if (state.isStarted === false) {\r\n    return state;\r\n  }\r\n\r\n  if (isGameOver(state)) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'MOVE':\r\n      return move(state, action)\r\n    case 'FIRE':\r\n      return fire(state, action)\r\n    case 'TICK':\r\n      return tick(state, action)\r\n    case 'ADD_INVADER':\r\n      return addInvader(state, action)\r\n    default:\r\n      return initialState;\r\n  }\r\n}\r\n","import React, { useImperativeHandle } from 'react'\n\nexport interface SoundProps {\n  audio: any;\n}\n\nexport interface SoundRef {\n  play: () => void;\n}\n\nexport const Sound = React.forwardRef<SoundRef, SoundProps>((props, ref) => {\n  const audioPtRef = React.useRef<HTMLAudioElement>()\n\n  useImperativeHandle(ref, () => {\n    return {\n      play: () => {\n        audioPtRef.current.currentTime = 0;\n        audioPtRef.current.play();\n      }\n    }\n  })\n\n\n  return (\n    <audio ref={audioPtRef} src={props.audio} />\n  )\n})\n","import React from 'react'\n\ninterface Row {\n  key: string;\n  left: any;\n  right: any;\n}\n\ninterface Props {\n  title?: string;\n  rows: Row[];\n}\n\nexport const Table: React.FC<Props> = (props) => {\n  return (\n    <table style={{ width: '100%' }}>\n      <thead>\n        <tr>\n          <th colSpan={2}>{props.title}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.rows.map(eachRow => (\n          <tr key={eachRow.key}>\n            <td style={{ textAlign: \"left\" }}>{eachRow.left}</td>\n            <td style={{ textAlign: \"right\" }}>{eachRow.right}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import React from 'react'\nimport { Table } from './Table'\n\ninterface Key {\n  key: string;\n  description: string;\n}\n\ninterface Props {\n  keys: Key[]\n}\n\nexport const ControlsTable: React.FC<Props> = (props) => {\n  return (\n    <Table\n      title=\"Controls\"\n      rows={props.keys.map(eachKey => ({\n        key: eachKey.key,\n        left: <span className=\"movement-key\">{eachKey.key}</span>,\n        right: eachKey.description\n      }))}\n    />\n  )\n}\n","import React from 'react'\r\nimport { ControlsTable } from './ControlsTable'\r\n\r\nexport const StartScreen = ({ handleStart }) => {\r\n  return (\r\n    <div className='screen start-screen'>\r\n      <section className='panel panel-start'>\r\n        <ControlsTable keys={[\r\n          {\r\n            key: \"W\",\r\n            description: \"Move up\"\r\n          },\r\n          {\r\n            key: \"S\",\r\n            description: \"Move down\"\r\n          },\r\n          {\r\n            key: \"A\",\r\n            description: \"Move left\"\r\n          },\r\n          {\r\n            key: \"D\",\r\n            description: \"Move right\"\r\n          },\r\n          {\r\n            key: \"Spacebar\",\r\n            description: \"Fire photon torpedos\"\r\n          }\r\n        ]}/>\r\n        <button style={{marginTop: '3em'}} onClick={handleStart}>Start</button>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { Table } from './Table'\n\ninterface Score {\n  username: string;\n  score: number;\n}\n\nexport interface Props {\n  scores: Score[];\n}\n\nexport const HighScores: React.FC<Props> = (props) => {\n  return (\n    <>\n      <h1>High Scores</h1>\n      <div className='high-scores-container'>\n        <Table \n          rows={props.scores.map((eachScore, i) => ({\n              key: eachScore.username,\n              left: `${i + 1}. ${eachScore.username}`,\n              right: <span className=\"score\">{eachScore.score}</span>\n          }))}\n        />\n      </div>\n    </>\n  )\n}\n\n","import React from 'react'\r\nimport { HighScores, Props as HighScoreProps } from './HighScores'\r\n\r\ninterface Props extends HighScoreProps {\r\n  handleNewGame: () => void;\r\n  handleSave: () => void;\r\n  playerScore: number;\r\n}\r\n\r\nexport const EndScreen: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className='screen end-screen'>\r\n      <section className=\"panel panel-end\">\r\n        <h1>Game Over</h1>\r\n        <h2>Your score: {props.playerScore}</h2>\r\n        <section className=\"buttons\">\r\n          <button onClick={props.handleNewGame}>New Game</button>\r\n          <button>Save</button>\r\n        </section>\r\n        <HighScores scores={props.scores} />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport * as Constants from './Constants';\r\nimport * as Actions from './Actions';\r\nimport GameCanvas from './GameCanvas';\r\nimport { initialState, reducer } from './reducer';\r\nimport { Invader, Sounds } from './types';\r\nimport ReactDOM from 'react-dom';\r\nimport { SoundRef, Sound } from './components/Sound';\r\nimport { StartScreen } from './components/StartScreen';\r\nimport { getRandom, isGameOver } from './helpers';\r\nimport { EndScreen } from './components/EndScreen';\r\nimport axios from 'axios';\r\n\r\nconst audioMap: Record<Sounds, any> = {\r\n  photonTorpedos: require('./audio/photon-torpedos.mp3'),\r\n  invaderDeath: require('./audio/invader-death.mp3'),\r\n};\r\n\r\nconst getRandomInvader = (): Invader => {\r\n  const width = 20;\r\n  const height = 20;\r\n\r\n  return {\r\n    geo: {\r\n      pos: {\r\n        x: getRandom(0 + width / 2, Constants.WIDTH - width / 2),\r\n        y: 0\r\n      },\r\n      width,\r\n      height\r\n    },\r\n    hp: 1,\r\n    score: 1\r\n  }\r\n}\r\n\r\nconst KEY_LIST = Object.values(Constants.KEYS).reduce((acc, curr) => \r\n  Object.values(acc).concat(Object.values(curr)), \r\n  []\r\n);\r\n\r\nconst isKeyDown = {}\r\n\r\nconst App = () => {\r\n  const [scores, setScores] = useState([]);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const audioRefs: Record<Sounds, React.MutableRefObject<SoundRef>> = {\r\n    invaderDeath: React.useRef(),\r\n    photonTorpedos: React.useRef()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isGameOver(state)) {\r\n      if (scores.length === 0) {\r\n        axios.get(`/api/users`)\r\n          .then(res => {\r\n            setScores(res.data);\r\n          })\r\n          .catch((e) => {\r\n            console.log('GET request failed.');\r\n          })\r\n      }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const handleKeyup = (e: KeyboardEvent) => {\r\n      if (KEY_LIST.indexOf(e.key) !== -1) {\r\n        isKeyDown[e.key] = false\r\n      }\r\n    }\r\n    \r\n    const handleKeydown = (e: KeyboardEvent) => {\r\n      if (KEY_LIST.indexOf(e.key) !== -1) {\r\n        isKeyDown[e.key] = true\r\n      }\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKeydown);\r\n    window.addEventListener('keyup', handleKeyup);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n      window.removeEventListener('keyup', handleKeyup);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const update = () => {\r\n      dispatch(Actions.tick())\r\n      \r\n      if (isKeyDown[Constants.KEYS.MOVEMENT.UP]) dispatch(Actions.moveUp())\r\n      if (isKeyDown[Constants.KEYS.MOVEMENT.DOWN]) dispatch(Actions.moveDown())\r\n      if (isKeyDown[Constants.KEYS.MOVEMENT.LEFT]) dispatch(Actions.moveLeft())\r\n      if (isKeyDown[Constants.KEYS.MOVEMENT.RIGHT]) dispatch(Actions.moveRight())\r\n      if (isKeyDown[Constants.KEYS.WEAPONS.PHOTON_TORPEDOS]) dispatch(Actions.fire())\r\n\r\n      if (Math.random() < .05) {\r\n        dispatch(Actions.addInvader(getRandomInvader()))\r\n      }\r\n    }\r\n\r\n    const tickId = setInterval(() => ReactDOM.unstable_batchedUpdates(update) ,Constants.TICK_MS);\r\n    return () => clearInterval(tickId)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (state.player.cooldown === Constants.SHOT_COOLDOWN) {\r\n      audioRefs.photonTorpedos.current.play()\r\n    }\r\n\r\n    state.invaders.forEach(eachInvader => {\r\n      if (eachInvader.hp <= 0) {\r\n        audioRefs.invaderDeath.current.play()\r\n      }\r\n    })\r\n\r\n    if (isGameOver(state)) {\r\n      audioRefs.invaderDeath.current.play()\r\n    }\r\n\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(audioMap).map(name => <Sound key={name} ref={audioRefs[name]} audio={audioMap[name]} />)}\r\n      {state.isStarted === false\r\n        ? <StartScreen handleStart={() => dispatch(Actions.start())} />\r\n        : isGameOver(state)\r\n        ? <EndScreen \r\n            handleNewGame={() => dispatch(Actions.newGame())} \r\n            handleSave={() => 0 }\r\n            playerScore={state.score}\r\n            scores={scores}\r\n          />\r\n        : <GameCanvas {...state}></GameCanvas>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { Action, Invader, MovePayload } from \"./types\";\nimport * as Constants from \"./Constants\";\n\nexport const start = (): Action<any> => {\n  return {\n    type: 'START',\n    payload: {}\n  }\n}\n\nexport const moveUp = (): Action<MovePayload> => {\n  return {\n    type: 'MOVE',\n    payload: {\n      dx: 0,\n      dy: -Constants.DY\n    }\n  }\n}\n\nexport const moveDown = (): Action<MovePayload> => {\n  return {\n    type: 'MOVE',\n    payload: {\n      dx: 0,\n      dy: Constants.DY\n    }\n  }\n}\n\nexport const moveLeft = (): Action<MovePayload> => {\n  return {\n    type: 'MOVE',\n    payload: {\n      dx: -Constants.DX,\n      dy: 0\n    }\n  }\n}\n\nexport const moveRight = (): Action<MovePayload> => {\n  return {\n    type: 'MOVE',\n    payload: {\n      dx: Constants.DX,\n      dy: 0\n    }\n  }\n}\n\nexport const fire = (): Action<any> => {\n  return {\n    type: 'FIRE',\n    payload: {}\n  }\n}\n\nexport const tick = (): Action<any> => {\n  return {\n    type: 'TICK',\n    payload: {}\n  }\n}\n\nexport const addInvader = (invader: Invader): Action<Invader> => {\n  return {\n    type: 'ADD_INVADER',\n    payload: invader\n  }\n}\n\nexport const newGame = (): Action<any> => {\n  return {\n    type: 'NEW_GAME',\n    payload: {}\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}